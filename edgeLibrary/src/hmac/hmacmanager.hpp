/**********************************************************
* This is a manager class for generating an HMAC code for 
* each message in order to verify the authenticity of the message
* and sender. During registration of the edge messenger , the 
* MAC ID of the edge messenger is sent which is registered with 
* the hmac key. Then the HMAC code is generated as follows :
* At the edge side :
* 1.) HMAC code is generated using SHA256 ( or other algorithms )
* 2.) Code = hash_function(key + Message_Data + MAC ID)
* At the server side the message is encoded as ( This part 
* to be done at server side )
* 1.) Message + code is recieved by the server
* 2.) Server generates a code using the HMAC key and MAC ID 
* registered with the server
* 3.) Server matches the hash code generated by itself
Currently the Library only supports HMAC created using 
SHA256 algorithm
***********************************************************/
#ifndef _HMAC_MANAGER_HPP_
#define _HMAC_MANAGER_HPP_

#include <iostream>
#include <memory>

#include <cryptopp/sha.h>
#include <cryptopp/filters.h>
#include <cryptopp/base64.h>

#include <cryptopp/hmac.h>

namespace EDGE_CONNECTOR_LIBRARY {
    class HMACManager {
        std::shared_ptr<std::string> mHMAC_KEY;

        CryptoPP::HMAC<CryptoPP::SHA256> mhmacFilter;
    public:
        HMACManager(std::string &aHMAC_KEY);
        
        std::string get_HMAC_disgest(std::string &aPayload);
    };
}

#endif